from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup


def build_dish_keyboard(dish_id: int) -> InlineKeyboardMarkup:
    """
    –°—Ç—Ä–æ–∏—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –±–ª—é–¥–∞ –≤ –º–µ–Ω—é
    :param dish_id: ID –±–ª—é–¥–∞
    :return: InlineKeyboardMarkup
    """
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(
            text="üîç –ü–æ–¥—Ä–æ–±–Ω–µ–µ",
            callback_data=f"dish_detail_{dish_id}"
        ),
        InlineKeyboardButton(
            text="‚ûï –í –∫–æ—Ä–∑–∏–Ω—É",
            callback_data=f"cart_{dish_id}"
        )
    )
    return builder.as_markup()


def build_cart_keyboard(items: list) -> InlineKeyboardMarkup:
    """
    –°—Ç—Ä–æ–∏—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã
    :param items: –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    :return: InlineKeyboardMarkup
    """
    builder = InlineKeyboardBuilder()

    for item in items:
        dish_id = item['dish_id']
        name = item['name']

        builder.row(
            InlineKeyboardButton(
                text=f"‚ùå {name[:20]}",
                callback_data=f"remove_{dish_id}"
            ),
            InlineKeyboardButton(
                text="-",
                callback_data=f"decrease_{dish_id}"
            ),
            InlineKeyboardButton(
                text=str(item['quantity']),
                callback_data=f"quantity_{dish_id}"
            ),
            InlineKeyboardButton(
                text="+",
                callback_data=f"increase_{dish_id}"
            ),
            width=4
        )

    builder.row(
        InlineKeyboardButton(
            text="‚ùå –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É",
            callback_data="clear_cart"
        ),
        InlineKeyboardButton(
            text="‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑",
            callback_data="checkout"
        ),
        width=2
    )

    return builder.as_markup()


def build_admin_dish_edit_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–ª—é–¥–∞"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="–ù–∞–∑–≤–∞–Ω–∏–µ", callback_data="editfield_name"),
        InlineKeyboardButton(text="–û–ø–∏—Å–∞–Ω–∏–µ", callback_data="editfield_description")
    )
    builder.row(
        InlineKeyboardButton(text="–¶–µ–Ω—É", callback_data="editfield_price"),
        InlineKeyboardButton(text="–ö–∞–ª–æ—Ä–∏–∏", callback_data="editfield_calories")
    )
    builder.row(
        InlineKeyboardButton(text="–¢–µ–≥–∏", callback_data="editfield_tags"),
        InlineKeyboardButton(text="–§–æ—Ç–æ", callback_data="editfield_photo")
    )
    return builder.as_markup()


def build_delete_confirmation_kb(dish_id: int) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –±–ª—é–¥–∞
    :param dish_id: ID –±–ª—é–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    :return: InlineKeyboardMarkup
    """
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(
            text="‚úÖ –î–∞",
            callback_data=f"confirm_delete_{dish_id}"
        ),
        InlineKeyboardButton(
            text="‚ùå –ù–µ—Ç",
            callback_data="cancel_delete"
        )
    )
    return builder.as_markup()


def build_order_control_kb(order_id: int) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–º –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞
    :param order_id: ID –∑–∞–∫–∞–∑–∞
    :return: InlineKeyboardMarkup
    """
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(
            text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å",
            callback_data=f"complete_order_{order_id}"
        ),
        InlineKeyboardButton(
            text="üì¶ –í –¥–æ—Å—Ç–∞–≤–∫—É",
            callback_data=f"to_delivery_{order_id}"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="‚ÑπÔ∏è –î–µ—Ç–∞–ª–∏",
            callback_data=f"order_details_{order_id}"
        )
    )
    return builder.as_markup()


def build_filters_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –º–µ–Ω—é"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="ü•ó –í–µ–≥–∞–Ω", callback_data="filter_vegan"),
        InlineKeyboardButton(text="üö´ –ë–µ–∑ –≥–ª—é—Ç–µ–Ω–∞", callback_data="filter_gluten_free")
    )
    builder.row(
        InlineKeyboardButton(text="üî• –û—Å—Ç—Ä–æ–µ", callback_data="filter_spicy"),
        InlineKeyboardButton(text="üçó –ú—è—Å–Ω–æ–µ", callback_data="filter_meat")
    )
    builder.row(
        InlineKeyboardButton(text="‚ùå –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", callback_data="filter_reset")
    )
    return builder.as_markup()


def build_pagination_keyboard(page: int, total_pages: int, prefix: str) -> InlineKeyboardMarkup:
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    :param page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    :param total_pages: –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü
    :param prefix: –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è callback_data
    :return: InlineKeyboardMarkup
    """
    builder = InlineKeyboardBuilder()

    if page > 1:
        builder.add(InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            callback_data=f"{prefix}_page_{page - 1}"
        ))

    builder.add(InlineKeyboardButton(
        text=f"{page}/{total_pages}",
        callback_data="current_page"
    ))

    if page < total_pages:
        builder.add(InlineKeyboardButton(
            text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è",
            callback_data=f"{prefix}_page_{page + 1}"
        ))

    return builder.as_markup()